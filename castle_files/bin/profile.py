"""
–í —ç—Ç–æ–º –º–æ–¥—É–ª–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–º–∫–æ–≤–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏, –∫–∞–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É, —Ç–∞–∫ –∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
(–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏—ë–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ /hero)
"""

from castle_files.work_materials.equipment_constants import get_equipment_by_code, equipment_names
from castle_files.libs.player import Player
from castle_files.libs.guild import Guild

from castle_files.bin.buttons import get_general_buttons

import re
import logging


# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –ø—Ä–æ—Ñ–∏–ª—è
def profile(bot, update):
    mes = update.message
    player = Player.get_player(mes.from_user.id)
    response = "<b>{}</b> - –í–æ–∏–Ω üñ§–°–∫–∞–ª—ã\n".format(player.nickname)
    response += "{}id: <code>{}</code>\n".format("@{}, ".format(player.username) if player.username is not None else "",
                                                 player.id)
    response += "üèÖ: <code>{}</code>, ‚öî: <code>{}</code>, üõ°: <code>{}</code>\n".format(player.lvl, player.attack,
                                                                                      player.defense)
    guild = Guild.get_guild(guild_id=player.guild) if player.guild is not None else None
    response += "–ì–∏–ª—å–¥–∏—è: {}\n".format("<code>{}</code>".format(guild.tag) if guild is not None else "–Ω–µ—Ç")
    if guild is not None:
        response += "–ü–æ–∫–∏–Ω—É—Ç—å –≥–∏–ª—å–¥–∏—é: /leave_guild\n"
    response += "\n–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞:\n"
    eq_list = list(player.equipment.values())
    if eq_list:
        for equipment in eq_list:
            response += "<b>{}</b><code>{}</code><code>{}</code>" \
                        "\n".format(equipment.name, "+ {}‚öî".format(equipment.attack) if equipment.attack is not None else "",
                                    "+ {}üõ°".format(equipment.defense) if equipment.defense is not None else "")
    bot.send_message(chat_id=mes.chat_id, text=response, parse_mode='HTML')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç —Ö–∏—Ä–æ –≤ –ª—Å
def hero(bot, update, user_data):
    mes = update.message
    text = mes.text
    castle = text[0]
    if castle != 'üñ§':
        # –ò–≥—Ä–æ–∫ –Ω–µ –∏–∑ –°–∫–∞–ª—ã
        bot.send_message(chat_id=mes.from_user.id, text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–µ –∏–∑ –°–∫–∞–ª—ã –∑–∞–ø—Ä–µ—â–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!")
        return
    player = Player.get_player(mes.from_user.id)
    if player is None and mes.chat_id != mes.from_user.id:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —É –±–æ—Ç–∞
        return
    # –ü–∞—Ä—Å–∏–Ω–≥ —Ö–∏—Ä–æ
    guild_tag = re.search("[üçÅ‚òòüñ§üê¢ü¶áüåπüçÜüéñ]\\[(.+)\\]", text)
    if guild_tag:
        guild_tag = guild_tag.group(1)
    nickname = text.splitlines()[0][1:]
    lvl = int(re.search("üèÖ–£—Ä–æ–≤–µ–Ω—å: (\\d+)", text).group(1))
    attack = int(re.search("‚öî–ê—Ç–∞–∫–∞: (\\d+)", text).group(1))
    defense = int(re.search("üõ°–ó–∞—â–∏—Ç–∞: (\\d+)", text).group(1))
    stamina = int(re.search("üîã–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: \\d+/(\\d+)", text).group(1))
    pet = re.search("–ü–∏—Ç–æ–º–µ—Ü:\n.(\\s.+\\(\\d+ lvl\\))", text)
    if pet:
        pet = pet.group(1)
    # –ü–∞—Ä—Å–∏–Ω–≥ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
    player_equipment = {
        "main_hand": None,
        "second_hand": None,
        "head": None,
        "gloves": None,
        "armor": None,
        "boots": None,
        "cloaks": None
    }
    equip_strings = text.partition("üéΩ–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞")[2].splitlines()[1:]
    for string in equip_strings:
        print(string)
        clear_name = re.search("\\+?\\d?\\s?(.+?)\\s\\+", string)
        if clear_name is None:
            logging.warning("Error while parsing item_string\n{}".format(string))
            continue
        else:
            logging.info("successful parsed {},, Got: {}".format(string, clear_name.group(1)))
        clear_name = clear_name.group(1)
        names_list = list(equipment_names.items())
        code = None
        for name, item_code in names_list:
            if name in clear_name:
                code = item_code
                break
        if code is None:
            logging.warning("Item code is None for item {}".format(clear_name))
            continue
        eq = get_equipment_by_code(code)
        if eq is None:
            logging.warning("Equipment with code {} is None".format(code))
            continue
        player_equipment.update({eq.place: eq})
    if player is None:
        player = Player(mes.from_user.id, mes.from_user.username, nickname, guild_tag, None, lvl, attack, defense,
                        stamina, pet, player_equipment)
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –±–¥
        player.insert_into_database()
        user_data.update({"status": "default"})
        bot.send_message(chat_id=mes.chat_id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üñ§–°–∫–∞–ª—É, <b>{}</b>!".format(player.nickname),
                         parse_mode='HTML', reply_markup=get_general_buttons(user_data))
    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        player.username = mes.from_user.username
        player.nickname = nickname
        player.guild_tag = guild_tag
        player.lvl = lvl
        player.attack = attack
        player.defense = defense
        player.stamina = stamina
        player.pet = pet
        player.equipment = player_equipment
        player.update()
        bot.send_message(chat_id=mes.chat_id, text="–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω, <b>{}</b>!".format(player.nickname),
                         parse_mode='HTML')
