"""
–í —ç—Ç–æ–º –º–æ–¥—É–ª–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å "–∏–≥—Ä–æ–≤—ã–º" –∑–∞–º–∫–æ–º - –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –∑–∞–º–∫–æ–º –°–∫–∞–ª—ã –≤ –±–æ—Ç–µ
"""
from castle_files.bin.buttons import send_general_buttons, get_general_buttons
from castle_files.libs.castle.location import Location
from castle_files.libs.player import Player
from castle_files.libs.guild import Guild

from castle_files.work_materials.globals import high_access_list, DEFAULT_CASTLE_STATUS

from telegram import ReplyKeyboardMarkup

import re


def change_rp(bot, update, user_data):
    if update.message.from_user.id != update.message.chat_id:
        return
    rp_off = user_data.get("rp_off")
    if rp_off:
        user_data.pop("rp_off")
        user_data.update({"status": DEFAULT_CASTLE_STATUS})
        send_general_buttons(update.message.from_user.id, user_data, bot=bot)
        return
    user_data.update({"status": "rp_off", "rp_off": True})
    bot.send_message(chat_id=update.message.chat_id, text="–†–µ–∂–∏–º –†–ü –æ—Ç–∫–ª—é—á—ë–Ω. –ï—Å–ª–∏ –í—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "
                                                          "–≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞–∂–º–∏—Ç–µ /change_rp –µ—â—ë —Ä–∞–∑.")
    send_general_buttons(update.message.from_user.id, user_data, bot=bot)


def back(bot, update, user_data):
    statuses_back = {
        "barracks": "central_square",
        "central_square": "central_square",
        "castle_gates": "central_square",
        "throne_room": "central_square",
        "mid_feedback": "throne_room",
        "duty_feedback": "castle_gates",
        "king_cabinet": "throne_room"

    }
    status = user_data.get("status")
    if status is None:
        send_general_buttons(update.message.from_user.id, user_data, bot=bot)
        return
    new_status = statuses_back.get(status)
    new_location = Location.get_id_by_status(new_status)
    user_data.update({"status": new_status, "location_id": new_location})
    send_general_buttons(update.message.from_user.id, user_data, bot=bot)


def guide_signs(bot, update):  # TODO: —Å–¥–µ–ª–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ
    bot.send_message(chat_id=update.message.from_user.id,
                     text="üó∫–£–∫–∞–∑–∞—Ç–µ–ª–∏ –≥–ª–∞—Å—è—Ç:\n"
                          "üé™<b>–ö–∞–∑–∞—Ä–º–∞</b>- —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞ —Ç–≤–æ–µ–π –≥–∏–ª—å–¥–∏–∏. "
                          "–ó–¥–µ—Å—å —Ç—ã –≤—Å–µ–≥–¥–∞ –Ω–∞–π–¥–µ—à—å —Å–≤–æ–∏—Ö —Å–æ–≥–∏–ª—å–¥–µ–π—Ü–µ–≤, —É–∑–Ω–∞–µ—à—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è "
                          "—Å–≤–æ–∏—Ö —Å–æ—Ä–∞—Ç–Ω–∏–∫–æ–≤, —É–∑–Ω–∞–µ—à—å –æ —Ä–∞—Ç–Ω—ã—Ö –ø–æ–¥–≤–∏–≥–∞—Ö –∏ –Ω–µ —Ç–æ–ª—å–∫–æ.\n\n"
                          "‚õ©<b>–ì–æ—Ä–æ–¥—Å–∫–∏–µ –í—Ä–∞—Ç–∞</b> - —Ç—É—Ç –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–∏–Ω—É—Ç—å—Å—è –ø–∞—Ä–æ—á–∫–æ–π —Å–ª–æ–≤ —Å –º–µ—Å—Ç–Ω—ã–º–∏ —Å—Ç—Ä–∞–∂–∞–º–∏, "
                          "–∏–º –≤—Å–µ —Ä–∞–≤–Ω–æ —Å–∫—É—á–Ω–æ –Ω–∞ –ø–æ—Å—Ç—É.\n\n"
                          "üèõ<b>–¢—Ä–æ–Ω–Ω—ã–π –ó–∞–ª</b> - –º–µ—Å—Ç–æ, –≥–¥–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–ª–∫–æ–≤–æ–¥—Ü–∞–º –∏ –¥–∞–∂–µ "
                          "–ø–æ–ø—Ä–æ—Å–∏—Ç—å –∞—É–¥–∏–µ–Ω—Ü–∏—é –ö–æ—Ä–æ–ª—è."
                          "\n\n‚ùì\n\n‚ùì\n\n‚ùì\n\n‚ùì\n\n‚ùì\n\n‚ùì\n\n<em>–ù–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è—Ö –µ—â—ë –º–Ω–æ–≥–æ –º–µ—Å—Ç–∞, –≤–æ–∑–º–æ–∂–Ω–æ, –≤ –±—É–¥—É—â–µ–º, "
                          "—Ç–∞–º –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏</em>", parse_mode='HTML')


def not_constructed(bot, update):
    bot.send_message(chat_id=update.message.chat_id,
                     text="–°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –ø–æ–¥ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã—Ö –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø–æ—Å—Ç—Ä–æ–µ–∫ –∏ —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π.\n"
                          "–°–µ–π—á–∞—Å –≤ –∑–∞–º–∫–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏.")


def welcome(bot, update, user_data):
    send_general_buttons(update.message.from_user.id, user_data, bot=bot)


def central_square(bot, update, user_data):
    user_data.update({"status": "central_square", "location_id": 0})
    send_general_buttons(update.message.from_user.id, user_data, bot=bot)


def barracks(bot, update, user_data):
    user_data.update({"status": "barracks", "location_id": 1})
    send_general_buttons(update.message.from_user.id, user_data, bot=bot)


def throne_room(bot, update, user_data):
    user_data.update({"status": "throne_room", "location_id": 2})
    send_general_buttons(update.message.from_user.id, user_data, bot=bot)


def castle_gates(bot, update, user_data):
    location_id = 3
    user_data.update({"status": "castle_gates", "location_id": 3})
    response = Location.get_location_enter_text_by_id(location_id)
    player = Player.get_player(update.message.from_user.id)
    buttons = get_general_buttons(user_data, only_buttons=True, player=player)
    if player is not None and player.game_class == "Sentinel":  # –¢–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—Ä–∞–∂–µ–π, –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ
        response += "\n–ö–∞–∫ —Å—Ç—Ä–∞–∂, —Ç—ã –∏–º–µ–µ—à—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Å—Ç—É–ø–∏—Ç—å –Ω–∞ –≤–∞—Ö—Ç—É\n"
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML', reply_markup=reply_markup)


# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–∏–¥–∞, –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ –∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–∞–≤–∞
def fill_mid_players():
    high_access_list.clear()
    throne = Location.get_location(2)
    mid_players = throne.special_info.get("mid_players")
    for player_id in mid_players:
        high_access_list.append(player_id)


# –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Å—Ç–∞–≤ –º–∏–¥–∞
def watch_portraits(bot, update):
    response = "–°—Ç–µ–Ω—ã –∑–∞–º–∫–∞ —É–≤–µ—à–∞–Ω—ã –ø–æ—Ä—Ç—Ä–µ—Ç–∞–º–∏ —Ç–µ–∫—É—â–∏—Ö –≥–µ–Ω–µ—Ä–∞–ª–æ–≤ –°–∫–∞–ª—ã:\n"
    for user_id in high_access_list:
        player = Player.get_player(user_id, notify_on_error=False)
        if player is None:
            continue
        response += "@{} - <b>{}</b>\n".format(player.username, player.nickname)
    bot.send_message(chat_id=update.message.from_user.id, text=response, parse_mode='HTML')


def headquarters(bot, update, user_data):
    user_data.update({"status": "headquarters", "location_id": 4})
    send_general_buttons(update.message.from_user.id, user_data, bot=bot)


def request_guild_message_notify(bot, update, user_data):
    user_data.update({"status": "sending_guild_message"})
    bot.send_message(chat_id=update.message.from_user.id, text="–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–∑–æ—Å–ª–∞–Ω–æ –≤–æ –≤—Å–µ –≥–∏–ª—å–¥–∏–∏")


def send_guild_message_notify(bot, update, user_data):
    user_data.update({"status": "headquarters"})
    for guild_id in Guild.guild_ids:
        guild = Guild.get_guild(guild_id=guild_id)
        bot.send_message(chat_id=guild.chat_id, text=update.message.text, parse_mode='HTML')
    bot.send_message(update.message.from_user.id, text="–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")


def king_cabinet(bot, update, user_data):
    response = "–í—ã –≤—Ö–æ–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∫–∞–±–∏–Ω–µ—Ç. –ü–∞–º—è—Ç—å —É—Å–ª—É–∂–ª–∏–≤–æ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –≥–µ–Ω–µ—Ä–∞–ª–æ–≤:\n"
    for user_id in high_access_list:
        player = Player.get_player(user_id, notify_on_error=False)
        if player is None:
            continue
        response += "@{} - <b>{}</b>\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Å—Å—ã–ª–∫—É: /remove_general_{}\n" \
                    "\n".format(player.username, player.nickname, player.id)
    user_data.update({"status": "king_cabinet"})
    buttons = get_general_buttons(user_data)
    bot.send_message(chat_id=update.message.from_user.id, text=response, reply_markup=buttons, parse_mode='HTML')


def request_change_castle_message(bot, update, user_data):
    central = Location.get_location(0)
    current_message = central.special_info.get("enter_text_format_values")
    user_data.update({"status": "changing_castle_message"})
    bot.send_message(chat_id=update.message.from_user.id,
                     text="–¢–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n<em>{}</em>\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ù–µ –¥–µ–ª–∞–π—Ç–µ –µ–≥–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–º."
                          "".format(current_message), parse_mode='HTML')


def change_castle_message(bot, update, user_data):
    central = Location.get_location(0)
    central.special_info.update({"enter_text_format_values": update.message.text})
    central.update_location_to_database()
    user_data.update({"status": "king_cabinet"})
    bot.send_message(chat_id=update.message.from_user.id,
                     text="–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n<em>{}</em>".format(update.message.text), parse_mode='HTML')


def add_general(bot, update, user_data):
    user_data.update({"status": "adding_general"})
    bot.send_message(chat_id=update.message.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ id –Ω–æ–≤–æ–≥–æ –≥–µ–Ω–µ—Ä–∞–ª–∞, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ \"–ù–∞–∑–∞–¥\"")


def adding_general(bot, update, user_data):
    mes = update.message
    try:
        player_id = int(mes.text)
    except ValueError:
        bot.send_message(chat_id=update.message.from_user.id, text="–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.")
        return
    if player_id in high_access_list:
        bot.send_message(chat_id=update.message.from_user.id, text="–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è—Å –≥–µ–Ω–µ—Ä–∞–ª–æ–º.")
        return
    player = Player.get_player(player_id, notify_on_error=False)
    if player is None:
        bot.send_message(chat_id=update.message.from_user.id, text="–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —ç—Ç–æ–≥–æ —Ö–æ–ª–æ–ø–∞. "
                                                                   "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ")
        return
    throne = Location.get_location(2)
    mid_players = throne.special_info.get("mid_players")
    mid_players.append(player_id)
    throne.update_location_to_database()
    fill_mid_players()
    bot.send_message(chat_id=update.message.from_user.id, text="@{} —Ç–µ–ø–µ—Ä—å –≥–µ–Ω–µ—Ä–∞–ª!".format(player.username))
    user_data.update({"status": "king_cabinet"})


def remove_general(bot, update):
    mes = update.message
    player_id = re.search("_(\\d+)", mes.text)
    if player_id is None:
        bot.send_message(chat_id=update.message.from_user.id, text="–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.")
        return
    player_id = int(player_id.group(1))
    if player_id not in high_access_list:
        bot.send_message(chat_id=update.message.from_user.id, text="–¢–∞–∫ –æ–Ω, —ç—Ç–æ, –≤—Ä–æ–¥–µ –∏ –Ω–µ –≥–µ–Ω–µ—Ä–∞–ª –≤–æ–≤—Å–µ. "
                                                                   "–ú–æ–∂–µ—Ç, –ø–æ–º–∏–ª—É–µ–º?")
        return
    player = Player.get_player(player_id, notify_on_error=False)
    throne = Location.get_location(2)
    mid_players = throne.special_info.get("mid_players")
    mid_players.remove(player_id)
    throne.update_location_to_database()
    fill_mid_players()
    bot.send_message(chat_id=update.message.from_user.id,
                     text="@{} —Å–æ—Å–ª–∞–Ω –≤ —Ç–æ—Ä—Ç—É–≥—É –∏ –±–æ–ª—å—à–µ –Ω–µ –≥–µ–Ω–µ—Ä–∞–ª".format(player.username))
