from castle_files.bin.service_functions import dict_invert

resources = {
    "Thread": "01",
    "Stick": "02",
    "Pelt": "03",
    "Bone": "04",
    "Coal": "05",
    "Charcoal": "06",
    "Powder": "07",
    "Iron ore": "08",
    "Cloth": "09",
    "Silver ore": "10",
    "Bauxite": "11",
    "Cord": "12",
    "Magic stone": "13",
    "Wooden shaft": "14",
    "Sapphire": "15",
    "Solvent": "16",
    "Ruby": "17",
    "Hardener": "18",
    "Steel": "19",
    "Leather": "20",
    "Bone powder": "21",
    "String": "22",
    "Coke": "23",
    "Purified powder": "24",
    "Silver alloy": "25",
    "Steel mold": "27",
    "Silver mold": "28",
    "Blacksmith frame": "29",
    "Artisan frame": "30",
    "Rope": "31",
    "Silver frame": "32",
    "Metal plate": "33",
    "Metallic fiber": "34",
    "Crafted leather": "35",
    "Quality Cloth": "36",
    "Blacksmith mold": "37",
    "Artisan mold": "38",
    "Stinky Sumac": "39",
    "Mercy Sassafras": "40",
    "Cliff Rue": "41",
    "Love Creeper": "42",
    "Wolf Root": "43",
    "Swamp Lavender": "44",
    "White Blossom": "45",
    "Ilaves": "46",
    "Ephijora": "47",
    "Storm Hyssop": "48",
    "Cave Garlic": "49",
    "Yellow Seed": "50",
    "Tecceagrass": "51",
    "Spring Bay Leaf": "52",
    "Ash Rosemary": "53",
    "Sanguine Parsley": "54",
    "Sun Tarragon": "55",
    "Maccunut": "56",
    "Dragon Seed": "57",
    "Queen's Pepper": "58",
    "Plasma of abyss": "59",
    "Ultramarine dust": "60",
    "Ethereal bone": "61",
    "Itacory": "62",
    "Assassin Vine": "63",
    "Kloliarway": "64",
    "Astrulic": "65",
    "Flammia Nut": "66",
    "Plexisop": "67",
    "Mammoth Dill": "68",
    "Silver dust": "69",
    "Bottle of Poison": "508",
    "Hay": "618",
    "Corn": "619",
    "Hamsters": "620",
    "Cheese": "621",
}

resources_lower = {k: v for k, v in list(map(lambda x: (x[0].lower(), x[1]), list(resources.items())))}
resources_reverted = dict_invert(resources)


def get_resource_name_by_code(code: str) -> str:
    return resources_reverted.get(code)


def get_resource_code_by_name(name: str) -> str:
    name = name.lower()
    return resources_lower.get(name)

