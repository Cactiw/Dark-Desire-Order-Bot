"""
–í —ç—Ç–æ–º —Ñ–∞–π–ª–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞—Ü–∏—è–º–∏ –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –∑–∞–º–∫–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ –ö–∞–∑–∞—Ä–º–∞, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å –∏ —Ç–¥...
"""
from castle_files.work_materials.globals import conn

import json

cursor = conn.cursor()


# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å - –õ–æ–∫–∞—Ü–∏—è
class Location:
    def __init__(self, location_id, location_name, enter_text, state=True, building_process=-1, special_info=None):
        self.id = location_id
        self.name = location_name
        self.enter_text = enter_text
        self.state = state  # True - –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ, False - –Ω–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ
        self.building_process = building_process  # -1 - —Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª–∞—Å—å / –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å, >=0 - –∏–¥—ë—Ç —Å—Ç—Ä–æ–π–∫–∞
        self.special_info = special_info
        self.load_location()

    @staticmethod
    def get_location(location_id):
        return locations.get(location_id)

    @staticmethod
    def get_location_enter_text_by_id(location_id):
        location = Location.get_location(location_id)
        if location is None:
            return None
        if location.special_info is None:
            return location.enter_text
        insert_values = location.special_info.get("enter_text_format_values")
        if insert_values is None:
            return location.enter_text
        return location.enter_text.format(insert_values)

    @staticmethod
    def get_id_by_status(status):
        return status_to_location.get(status)

    def load_location(self):
        request = "select state, building_process, special_info from locations where location_id = %s"
        cursor.execute(request, (self.id,))
        row = cursor.fetchone()
        if row is None:
            return -1
        self.state = row[0]
        self.building_process = row[1]
        self.special_info = json.loads(row[2]) if row[2] is not None else None

    def update_location_to_database(self):
        request = "update locations set state = %s, building_process = %s, special_info = %s where location_id = %s"
        cursor.execute(request, (self.state, self.building_process,
                                 json.dumps(self.special_info) if self.special_info is not None else None, self.id))

    def create_location_in_database(self):
        request = "select location_id from locations where location_id = %s"
        cursor.execute(request, (self.id,))
        row = cursor.fetchone()
        if row is not None:
            return -1
        request = "insert into locations(location_id, state, building_process, special_info) values (%s, %s, %s, %s)"
        cursor.execute(request, (self.id, self.state, self.building_process,
                                 json.dumps(self.special_info) if self.special_info is not None else None))


#

"""
–î–∞–ª–µ–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ª–æ–∫–∞—Ü–∏—è–º–∏ –≤ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –∑–∞–º–∫–µ - –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è, —Ç–µ–∫—Å—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –≤ –ª–æ–∫–∞—Ü–∏—é –≤—Ö–æ–¥—è—Ç –∏
–¥—Ä—É–≥–∏–µ –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è —Ä–µ–¥–∫–æ
"""


central_square = Location(0, "‚õ≤Ô∏è –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å",
                          "–í—ã —Å—Ç–æ–∏—Ç–µ –ø–æ—Å—Ä–µ–¥–∏ ‚õ≤Ô∏è–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∏ –°–∫–∞–ª—ã –¢–µ–º–Ω–æ–≥–æ –ñ–µ–ª–∞–Ω–∏—è.\n\n"
                          "–ù–∞ –ª–æ–±–Ω–æ–º –º–µ—Å—Ç–µ, –ª–µ–≤–µ–µ —Ñ–æ–Ω—Ç–∞–Ω–∞, –ø—Ä–∏–±–∏—Ç –ø–µ—Ä–≥–∞–º–µ–Ω—Ç —Å –≤–∞–∂–Ω—ã–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º:\nüìú\n<em>{}</em>\nüìú\n"
                          "–ó–∞–≤–µ—Ä–µ–Ω–æ –ø–µ—á–∞—Ç—å—é –∏ –ø–æ–¥–ø–∏—Å—å—é –ö–æ—Ä–æ–ª—è.",
                          special_info={"enter_text_format_values": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–∫–∞–ª—É.\n–°–Ω–æ–≤–∞."})
central_square.create_location_in_database()
barracks = Location(1, "üé™ –ö–∞–∑–∞—Ä–º–∞", "–í—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–∑–∞—Ä–º—É.")
barracks.create_location_in_database()
throne_room = Location(2, "üèõ –¢—Ä–æ–Ω–Ω—ã–π –∑–∞–ª",
                       "–í—ã –ø–æ–¥–Ω–∏–º–∞–µ—Ç–µ—Å—å –≤ –¢—Ä–æ–Ω–Ω—ã–π –ó–∞–ª. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –í—ã—Å—à–µ–º—É –ö–æ–º–∞–Ω–¥–Ω–æ–º—É –°–æ—Å—Ç–∞–≤—É –°–∫–∞–ª—ã, "
                       "–∏–ª–∏ –¥–∞–∂–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∞—É–¥–∏–µ–Ω—Ü–∏–∏ —É üëë @{}", special_info={"enter_text_format_values": "DjedyBreaM"})
throne_room.create_location_in_database()

status_to_location = {
    "default": None,
    "central_square": 0,
    "barracks": 1,
    "throne_room": 2
}

# –°–ª–æ–≤–∞—Ä—å —Å –ª–æ–∫–∞—Ü–∏—è–º–∏ - { id –ª–æ–∫–∞—Ü–∏–∏ : –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Location }
locations = {
    0: central_square,
    1: barracks,
    2: throne_room

}
