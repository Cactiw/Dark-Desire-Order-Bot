"""
–í —ç—Ç–æ–º —Ñ–∞–π–ª–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞—Ü–∏—è–º–∏ –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –∑–∞–º–∫–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ –ö–∞–∑–∞—Ä–º–∞, –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å –∏ —Ç–¥...
"""
from castle_files.work_materials.globals import conn

from telegram import KeyboardButton, ReplyKeyboardMarkup

import json
import logging

cursor = conn.cursor()
cursor2 = conn.cursor()


# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å - –õ–æ–∫–∞—Ü–∏—è
class Location:
    def __init__(self, location_id, location_name, enter_text, need_clicks_to_construct=None,
                 state=True, building_process=-1, special_info=None, need_res_to_construct=None):
        self.id = location_id
        self.name = location_name
        self.enter_text = enter_text
        self.need_clicks_to_construct = need_clicks_to_construct
        self.state = state  # True - –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ, False - –Ω–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ
        self.building_process = building_process  # -1 - —Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª–∞—Å—å / –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å, >=0 - –∏–¥—ë—Ç —Å—Ç—Ä–æ–π–∫–∞
        self.special_info = special_info
        self.load_location()
        self.need_res_to_construct = need_res_to_construct
        self.child_locations = None

    def under_construction(self):
        return self.state is False and self.building_process >= 0

    def is_constructed(self):
        return self.state

    @staticmethod
    def get_location(location_id):
        return locations.get(location_id)

    @staticmethod
    def get_location_enter_text_by_id(location_id, without_format=False):
        location = Location.get_location(location_id)
        if location is None:
            return None
        if hasattr(location, "update_enter_text"):
            location.update_enter_text()
        if location.special_info is None:
            return location.enter_text
        insert_values = location.special_info.get("enter_text_format_values")
        if insert_values is None or without_format:
            return location.enter_text
        return location.enter_text.format(*insert_values)

    @staticmethod
    def get_id_by_status(status):
        return status_to_location.get(status)

    def load_location(self, other_process=False):
        new_cursor = cursor
        if other_process:
            new_cursor = cursor2
        request = "select state, building_process, special_info from locations where location_id = %s"
        new_cursor.execute(request, (self.id,))
        row = new_cursor.fetchone()
        if row is None:
            return -1
        self.state = row[0]
        self.building_process = row[1]
        self.special_info = row[2]

    def update_location_to_database(self):
        request = "update locations set state = %s, building_process = %s, special_info = %s where location_id = %s"
        cursor.execute(request, (self.state, self.building_process,
                                 json.dumps(self.special_info) if self.special_info is not None else None, self.id))

    def create_location_in_database(self):
        request = "select location_id from locations where location_id = %s"
        cursor.execute(request, (self.id,))
        row = cursor.fetchone()
        if row is not None:
            return -1
        request = "insert into locations(location_id, state, building_process, special_info) values (%s, %s, %s, %s)"
        cursor.execute(request, (self.id, self.state, self.building_process,
                                 json.dumps(self.special_info) if self.special_info is not None else None))


# –¢—Ä–æ–Ω–Ω—ã–π –∑–∞–ª —Å —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–µ–π
class ThroneRoom(Location):
    def __init__(self, location_id, location_name, enter_text, need_clicks_to_construct=None,
                 state=True, building_process=-1, special_info=None):
        if location_id != 2:
            raise NameError
        super(ThroneRoom, self).__init__(location_id, location_name, enter_text, need_clicks_to_construct,
                                       state, building_process, special_info)
        treasury = self.special_info.get("treasury")
        self.treasury = Treasury(6, "–°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞",
                                 "–í—ã –≤—Ö–æ–¥–∏—Ç–µ –≤ —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü—É. –¶–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Ä–∞–∑–ª–æ–∂–µ–Ω—ã –≤ –∫—É—á–∫–∏, "
                                 "–∑–æ–ª–æ—Ç–æ –∏ —Ü–µ–Ω–Ω–æ–µ –æ–±–º—É–Ω–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—ë –≤–∏–¥–∏–º–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.\n\n"
                                 "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: üå≤–î–µ—Ä–µ–≤–æ: <b>{}</b>, ‚õ∞–ö–∞–º–µ–Ω—å: <b>{}</b>",
                                 wood=treasury.get("wood"), stone=treasury.get("stone"), throne_room=self)

    def update_location_to_database(self):
        treasury = self.special_info.get("treasury")
        treasury.update({"wood": self.treasury.wood, "stone": self.treasury.stone})
        super().update_location_to_database()


# –°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞, —Å –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏
class Treasury(Location):
    def __init__(self, location_id, location_name, enter_text, need_clicks_to_construct=None,
                 state=True, building_process=-1, special_info=None, wood=0, stone=0, throne_room=None):
        super(Treasury, self).__init__(location_id, location_name, enter_text, need_clicks_to_construct,
                                       state, building_process, special_info)
        print(wood, stone)
        self.wood = wood
        self.stone = stone
        self.throne_room = throne_room
        if self.special_info is None:
            self.special_info = {}
        self.special_info.update({"enter_text_format_values": [self.wood, self.stone]})

    def change_resource(self, resource, count):
        if count >= 0:
            self.__setattr__(resource, self.__getattribute__(resource) + count)
        else:
            attr = self.__getattribute__(resource)
            if attr < count:
                return -1
            self.__setattr__(resource, attr + count)
        self.special_info.update({"enter_text_format_values": [self.wood, self.stone]})
        old = central_square.special_info.get("enter_text_format_values")
        old[1] = self.wood
        old[2] = self.stone
        central_square.update_location_to_database()
        self.update_location_to_database()

    def update_location_to_database(self):
        self.throne_room.update_location_to_database()


class ConstructionPlate(Location):

    BUTTONS_IN_ROW_LIMIT = 3

    def __init__(self, location_id, location_name, enter_text, need_clicks_to_construct=None,
                 state=True, building_process=-1, special_info=None):
        super(ConstructionPlate, self).__init__(location_id, location_name, enter_text, need_clicks_to_construct,
                                                state, building_process, special_info)
        self.construction_active = False
        self.buttons = [[KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]]

    def refill_current_buildings_info(self):
        current_row = 0
        old_text = "–°–µ–π—á–∞—Å –≤ –∑–∞–º–∫–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏."
        self.construction_active = False
        new_text = "–°–µ–π—á–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–π–∫–∏:\n\n"
        self.buttons = [[], [KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]]
        for loc in list(locations.values()):
            if loc.state is False and loc.building_process >= 0:
                # –°—Ç—Ä–æ–π–∫–∞ –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–∞
                if not self.construction_active:
                    self.buttons = [[], [KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]]
                self.construction_active = True
                new_text += "<b>{}</b>\n–ü—Ä–æ–≥—Ä–µ—Å—Å: <code>{}</code> –∏–∑ <code>{}</code>\n\n" \
                            "".format(loc.name, loc.building_process, loc.need_clicks_to_construct)
                if len(self.buttons[current_row]) >= self.BUTTONS_IN_ROW_LIMIT:
                    self.buttons.append([])
                    current_row += 1
                self.buttons[current_row].append(KeyboardButton(loc.name))
        new_text += "\n–í—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è!"
        if self.construction_active:
            self.special_info.update({"enter_text_format_values": [new_text]})
        else:
            self.special_info.update({"enter_text_format_values": [old_text]})

    def update_enter_text(self):
        self.refill_current_buildings_info()


#

"""
–î–∞–ª–µ–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ª–æ–∫–∞—Ü–∏—è–º–∏ –≤ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –∑–∞–º–∫–µ - –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è, —Ç–µ–∫—Å—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –≤ –ª–æ–∫–∞—Ü–∏—é –≤—Ö–æ–¥—è—Ç –∏
–¥—Ä—É–≥–∏–µ –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è —Ä–µ–¥–∫–æ
–≠—Ç–æ –±—ã –∫–æ–Ω–µ—á–Ω–æ –∑–∞–∫–∏–Ω—É—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏, –Ω–æ —Ç–æ–≥–¥–∞ –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –≤–æ–∑–Ω–∏–∫–∞—é—Ç
"""

throne_room = ThroneRoom(2, "üèõ –¢—Ä–æ–Ω–Ω—ã–π –∑–∞–ª",
                         "–í—ã –ø–æ–¥–Ω–∏–º–∞–µ—Ç–µ—Å—å –≤ –¢—Ä–æ–Ω–Ω—ã–π –ó–∞–ª. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –í—ã—Å—à–µ–º—É –ö–æ–º–∞–Ω–¥–Ω–æ–º—É –°–æ—Å—Ç–∞–≤—É –°–∫–∞–ª—ã "
                         "–∏ –¥–∞–∂–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∞—É–¥–∏–µ–Ω—Ü–∏–∏ —É –í–†–ò–û üëë@{}\n\nüìú\n{}", need_clicks_to_construct=1000,
                         special_info={"enter_text_format_values": ["DjedyBreaM", "–î–µ–±—Ä–∏—Ñ"],
                                       "mid_players": [231900398, 205356091], "banned_in_feedback": [],
                                       "treasury": {"wood": 0, "stone": 0}})
throne_room.create_location_in_database()
central_square = Location(0, "‚õ≤Ô∏è –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥—å",
                          "–í—ã —Å—Ç–æ–∏—Ç–µ –ø–æ—Å—Ä–µ–¥–∏ ‚õ≤Ô∏è–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∏ –°–∫–∞–ª—ã –¢–µ–º–Ω–æ–≥–æ –ñ–µ–ª–∞–Ω–∏—è.\n\n"
                          "–ù–∞ –ª–æ–±–Ω–æ–º –º–µ—Å—Ç–µ, –ª–µ–≤–µ–µ —Ñ–æ–Ω—Ç–∞–Ω–∞, –ø—Ä–∏–±–∏—Ç –ø–µ—Ä–≥–∞–º–µ–Ω—Ç —Å –≤–∞–∂–Ω—ã–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º:\nüìú\n<em>{}</em>\nüìú\n"
                          "–ó–∞–≤–µ—Ä–µ–Ω–æ –ø–µ—á–∞—Ç—å—é –∏ –ø–æ–¥–ø–∏—Å—å—é –ö–æ—Ä–æ–ª—è.\n\n–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∑–Ω—ã: üå≤–î–µ—Ä–µ–≤–æ: <b>{}</b>, "
                          "‚õ∞–ö–∞–º–µ–Ω—å: <b>{}</b>\n\n"
                          "<a href=\"https://t.me/joinchat/GFFOhRbguH_dJK_6eiccIg\">–ß–∞—Ç —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∏</a>",
                          special_info={"enter_text_format_values": [
                              "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–∫–∞–ª—É.\n–°–Ω–æ–≤–∞.", throne_room.treasury.wood,
                              throne_room.treasury.stone]
                          })
central_square.create_location_in_database()
try:
    old = central_square.special_info.get("enter_text_format_values")
    old[1] = throne_room.treasury.wood
    old[2] = throne_room.treasury.stone
except IndexError:
    # –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å –∫–∞–∑–Ω–æ–π
    logging.error("Old format values in central square")
    pass
barracks = Location(1, "üé™ –ö–∞–∑–∞—Ä–º–∞", "–í—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–∑–∞—Ä–º—É.")
barracks.create_location_in_database()
castle_gates = Location(3, "‚õ© –í—Ä–∞—Ç–∞ –∑–∞–º–∫–∞",
                        "–í—ã –ø–æ–¥–æ—à–ª–∏ –∫ –≤—Ä–∞—Ç–∞–º –∑–∞–º–∫–∞. –ó–¥–µ—Å—å –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –Ω–µ–º–Ω–æ–≥–æ–ª—é–¥–Ω–æ. –ù–∞ –ø–æ—Å—Ç—É –¥–µ–∂—É—Ä—è—Ç —Å—Ç—Ä–∞–∂–∏ –°–∫–∞–ª—ã, "
                        "–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ —Å–º–æ–≥—É—Ç –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –¥–æ—Ä–æ–≥—É –¥–æ –Ω—É–∂–Ω–æ–≥–æ –º–µ—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å "
                        "—Ä–∞–¥–æ—Å—Ç—å—é —Å–∫–æ—Ä–æ—Ç–∞—é—Ç –≤—Ä–µ–º—è –≤ –±–µ—Å–µ–¥–µ.", special_info={"players_on_duty": [],
                                                                            "banned_in_feedback": []})
castle_gates.create_location_in_database()
headquarters = Location(4, "–®—Ç–∞–±", "–Ø–≤–ª—è—è—Å—å –≥–µ–Ω–µ—Ä–∞–ª–æ–º, –í—ã –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –≤—Ö–æ–¥–∏—Ç–µ –≤ —à—Ç–∞–±. –ù–∞ —Å—Ç–µ–Ω–∞—Ö –≤–∏—Å—è—Ç –∫–∞—Ä—Ç—ã, "
                                   "–ø–æ—Å—ã–ª—å–Ω—ã–µ –∑–∞—á–∏—Ç—ã–≤–∞—é—Ç –¥–æ–Ω–µ—Å–µ–Ω–∏—è.")

technical_tower = Location(5, "–ë–∞—à–Ω—é —Ç–µ—Ö–Ω–æ-–º–∞–≥–∏—á–µ—Å–∫–∏—Ö –Ω–∞—É–∫",
                           "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∞—à–Ω—é –¢–µ—Ö–Ω–æ-–ú–∞–≥–∏—á–µ—Å–∫–∏—Ö –Ω–∞—É–∫.\n"
                           "–ì–ª–∞—à–∞—Ç–∞–π –≤–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ  –ê—Ä—Ö–∏–º–µ–π—Å—Ç–µ—Ä–∞ –¢–µ–º–Ω–æ–≥–æ –ñ–µ–ª–∞–Ω–∏—è –≤–µ—â–∞–µ—Ç:\n\nüìú\n{}",
                           special_info={"enter_text_format_values": ["–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞"],
                                         "last_update_id": 0})
technical_tower.create_location_in_database()

construction_plate = ConstructionPlate(7, "–°—Ç–æ–π–ø–ª–æ—â–∞–¥–∫–∞", "–í—ã –≤—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–æ–π–ø–ª–æ—â–∞–¥–∫—É.\n{}",
                                       special_info={
                                           "enter_text_format_values": ["–°–µ–π—á–∞—Å –≤ –∑–∞–º–∫–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. "
                                                                        "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏."]})
construction_plate.create_location_in_database()

hall_of_fame = Location(8, "üè§–ú–∞–Ω–¥–∞–ø–∞ –°–ª–∞–≤—ã", "–ú–∞–Ω–¥–∞–ø–∞ –°–ª–∞–≤—ã - –ø–æ—á–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ —É–≤–µ–∫–æ–≤–µ—á–µ–Ω—ã –≥–µ—Ä–æ–∏ –°–∫–∞–ª—ã, "
                        "–∏—Ö –ø–æ–¥–≤–∏–≥–∏ –∏ –∑–∞—Å–ª—É–≥–∏ –ø–µ—Ä–µ–¥ –∑–∞–º–∫–æ–º. –í–µ—á–Ω–∞—è —Å–ª–∞–≤–∞ –∏ –ø–æ—á–µ—Ç!",
                        need_clicks_to_construct=1000, state=False, building_process=-1,
                        need_res_to_construct={"wood": 500, "stone": 500})
hall_of_fame.create_location_in_database()


# –¢–û–í–ê–†–ò–©! –°–û–ó–î–ê–õ –õ–û–ö–ê–¶–ò–Æ -- –í–ù–ï–°–ò –í –°–õ–û–í–ê–†–ò –ù–ò–ñ–ï!

status_to_location = {
    "default": None,
    "central_square": 0,
    "barracks": 1,
    "throne_room": 2,
    "castle_gates": 3,
    "headquarters": 4,
    "technical_tower": 5,
    "treasury": 6,
    "construction_plate": 7,
    "hall_of_fame": 8,
}

# –°–ª–æ–≤–∞—Ä—å —Å –ª–æ–∫–∞—Ü–∏—è–º–∏ - { id –ª–æ–∫–∞—Ü–∏–∏ : –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Location }
# –ù–ï –ú–ï–ù–Ø–ô–¢–ï –≠–¢–ò ID
locations = {
    0: central_square,
    1: barracks,
    2: throne_room,
    3: castle_gates,
    4: headquarters,
    5: technical_tower,
    6: throne_room.treasury,
    7: construction_plate,
    8: hall_of_fame,
}
