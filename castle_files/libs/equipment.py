"""
–í —ç—Ç–æ–º –º–æ–¥—É–ª–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –∫–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏.
–ö–ª–∞—Å—Å —Ö—Ä–∞–Ω–∏—Ç —Ç–∏–ø(–ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∫–æ–¥–∞ –≤–µ—â–∏), –∫–æ–¥ (–±–µ–∑ —Ç–∏–ø–∞),
–∏–º—è –∏ —Å—Ç–∞—Ç—ã –≤–µ—â–∏.
"""
import json


class Equipment:
    quality = {"Fine": "E", "High": "D", "Great": "C", "Excellent": "B", "Masterpiece": "A"}

    def __init__(self, place, item_type, code, name, attack, defense, tier, condition=None, quality=None):
        self.place = place
        self.type = item_type
        self.code = code
        self.name = name
        self.attack = attack
        self.defense = defense
        self.tier = tier
        self.condition = condition
        self.quality = quality

        self.source_name = self.name

    def set_code(self, code):
        self.type = code[0]
        self.code = code[1:]

    def to_json(self):
        dictionary = {
            "code": self.type + self.code,
            "name": self.name,
            "attack": self.attack,
            "defense": self.defense,
            "quality": self.quality,
            "condition": self.condition
        }
        return json.dumps(dictionary)

    def set_from_json(self, equipment_list: dict):
        self.set_code(equipment_list.get("code"))
        self.name = equipment_list.get("name")
        self.attack = equipment_list.get("attack")
        self.defense = equipment_list.get("defense")
        self.quality = equipment_list.get("quality")
        self.condition = equipment_list.get("condition")

    def format(self) -> str:
        return "{}<b>{}</b>{}<code>{}</code><code>{}</code>" \
                    "\n".format("‚ú®" if self.condition == 'reinforced' else "üî©" if self.condition == "broken"
                                else "", self.name, " {} ".format(self.quality) if self.quality else "",
                                " +{}‚öîÔ∏è ".format(self.attack) if self.attack != 0 else "",
                                "+{}üõ° ".format(self.defense) if self.defense != 0 else "")

    def __eq__(self, other):
        # –®–º–æ—Ç–∫–∞ —Ä–∞–≤–Ω–∞ –¥—Ä—É–≥–æ–π –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ —Ç–∏–ø–∞ –∏ –∫–æ–¥–∞ (–Ω—É–∂–Ω–æ –µ—â—ë –ø–æ–¥—É–º–∞—Ç—å –ø–æ—Ç–æ–º)
        return self.type == other and self.code == other.code
